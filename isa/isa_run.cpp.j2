#include <cstring>
#include "isa.h"

uint64_t REG_FILE[128];
uint64_t IP = 0;
uint64_t RET_VAL = 0;


{% for instruction in instructions %}

uint8_t do_{{ instruction.mnemonic }}(void *ptr) {
    uint8_t *_ptr = reinterpret_cast<uint8_t *>(ptr);
    _ptr++;

{% for arg in instruction.args %}
{%- if arg["type"] == 'RegType' %}
    uint64_t &_arg{{ loop.index0 }} = GetReg(*reinterpret_cast<{{ arg["type"] }} *>(_ptr));
    _ptr += 1;
{%- else %}
    const uint64_t _arg{{ loop.index0 }} = *reinterpret_cast<{{ arg["type"] }} *>(_ptr);
    _ptr +=  8;
{% endif%}
{% endfor %}

    {{ instruction.logic }}
    return {{ instruction.len }};
}


{% endfor %}


[
    {
      "opcodeHex": "0x00",
      "opcodeDec": 0,
      "mnemonic": "nop",
      "description": "Do nothing"
    },
    {
      "opcodeHex": "0x01",
      "opcodeDec": 1,
      "mnemonic": "aconst_null",
      "description": "Push null"
    },
    {
      "opcodeHex": "0x02",
      "opcodeDec": 2,
      "mnemonic": "iconst_m1",
      "description": "Push int constant -1"
    },
    {
      "opcodeHex": "0x03",
      "opcodeDec": 3,
      "mnemonic": "iconst_0",
      "description": "Push int constant 0"
    },
    {
      "opcodeHex": "0x04",
      "opcodeDec": 4,
      "mnemonic": "iconst_1",
      "description": "Push int constant 1"
    },
    {
      "opcodeHex": "0x05",
      "opcodeDec": 5,
      "mnemonic": "iconst_2",
      "description": "Push int constant 2"
    },
    {
      "opcodeHex": "0x06",
      "opcodeDec": 6,
      "mnemonic": "iconst_3",
      "description": "Push int constant 3"
    },
    {
      "opcodeHex": "0x07",
      "opcodeDec": 7,
      "mnemonic": "iconst_4",
      "description": "Push int constant 4"
    },
    {
      "opcodeHex": "0x08",
      "opcodeDec": 8,
      "mnemonic": "iconst_5",
      "description": "Push int constant 5"
    },
    {
      "opcodeHex": "0x09",
      "opcodeDec": 9,
      "mnemonic": "lconst_0",
      "description": "Push long constant 0"
    },
    {
      "opcodeHex": "0x0a",
      "opcodeDec": 10,
      "mnemonic": "lconst_1",
      "description": "Push long constant 1"
    },
    {
      "opcodeHex": "0x0b",
      "opcodeDec": 11,
      "mnemonic": "fconst_0",
      "description": "Push float constant 0.0"
    },
    {
      "opcodeHex": "0x0c",
      "opcodeDec": 12,
      "mnemonic": "fconst_1",
      "description": "Push float constant 1.0"
    },
    {
      "opcodeHex": "0x0d",
      "opcodeDec": 13,
      "mnemonic": "fconst_2",
      "description": "Push float constant 2.0"
    },
    {
      "opcodeHex": "0x0e",
      "opcodeDec": 14,
      "mnemonic": "dconst_0",
      "description": "Push double constant 0.0"
    },
    {
      "opcodeHex": "0x0f",
      "opcodeDec": 15,
      "mnemonic": "dconst_1",
      "description": "Push double constant 1.0"
    },
    {
      "opcodeHex": "0x10",
      "opcodeDec": 16,
      "mnemonic": "bipush",
      "description": "Push byte"
    },
    {
      "opcodeHex": "0x11",
      "opcodeDec": 17,
      "mnemonic": "sipush",
      "description": "Push short"
    },
    {
      "opcodeHex": "0x12",
      "opcodeDec": 18,
      "mnemonic": "ldc",
      "description": "Push item from run-time constant pool"
    },
    {
      "opcodeHex": "0x13",
      "opcodeDec": 19,
      "mnemonic": "ldc_w",
      "description": "Push item from run-time constant pool (wide index)"
    },
    {
      "opcodeHex": "0x14",
      "opcodeDec": 20,
      "mnemonic": "ldc2_w",
      "description": "Push long or double from run-time constant pool"
    },
    {
      "opcodeHex": "0x15",
      "opcodeDec": 21,
      "mnemonic": "iload",
      "description": "Load int from local variable"
    },
    {
      "opcodeHex": "0x16",
      "opcodeDec": 22,
      "mnemonic": "lload",
      "description": "Load long from local variable"
    },
    {
      "opcodeHex": "0x17",
      "opcodeDec": 23,
      "mnemonic": "fload",
      "description": "Load float from local variable"
    },
    {
      "opcodeHex": "0x18",
      "opcodeDec": 24,
      "mnemonic": "dload",
      "description": "Load double from local variable"
    },
    {
      "opcodeHex": "0x19",
      "opcodeDec": 25,
      "mnemonic": "aload",
      "description": "Load reference from local variable"
    },
    {
      "opcodeHex": "0x1a",
      "opcodeDec": 26,
      "mnemonic": "iload_0",
      "description": "Load int from local variable 0"
    },
    {
      "opcodeHex": "0x1b",
      "opcodeDec": 27,
      "mnemonic": "iload_1",
      "description": "Load int from local variable 1"
    },
    {
      "opcodeHex": "0x1c",
      "opcodeDec": 28,
      "mnemonic": "iload_2",
      "description": "Load int from local variable 2"
    },
    {
      "opcodeHex": "0x1d",
      "opcodeDec": 29,
      "mnemonic": "iload_3",
      "description": "Load int from local variable 3"
    },
    {
      "opcodeHex": "0x1e",
      "opcodeDec": 30,
      "mnemonic": "lload_0",
      "description": "Load long from local variable 0"
    },
    {
      "opcodeHex": "0x1f",
      "opcodeDec": 31,
      "mnemonic": "lload_1",
      "description": "Load long from local variable 1"
    },
    {
      "opcodeHex": "0x20",
      "opcodeDec": 32,
      "mnemonic": "lload_2",
      "description": "Load long from local variable 2"
    },
    {
      "opcodeHex": "0x21",
      "opcodeDec": 33,
      "mnemonic": "lload_3",
      "description": "Load long from local variable 3"
    },
    {
      "opcodeHex": "0x22",
      "opcodeDec": 34,
      "mnemonic": "fload_0",
      "description": "Load float from local variable 0"
    },
    {
      "opcodeHex": "0x23",
      "opcodeDec": 35,
      "mnemonic": "fload_1",
      "description": "Load float from local variable 1"
    },
    {
      "opcodeHex": "0x24",
      "opcodeDec": 36,
      "mnemonic": "fload_2",
      "description": "Load float from local variable 2"
    },
    {
      "opcodeHex": "0x25",
      "opcodeDec": 37,
      "mnemonic": "fload_3",
      "description": "Load float from local variable 3"
    },
    {
      "opcodeHex": "0x26",
      "opcodeDec": 38,
      "mnemonic": "dload_0",
      "description": "Load double from local variable 0"
    },
    {
      "opcodeHex": "0x27",
      "opcodeDec": 39,
      "mnemonic": "dload_1",
      "description": "Load double from local variable 1"
    },
    {
      "opcodeHex": "0x28",
      "opcodeDec": 40,
      "mnemonic": "dload_2",
      "description": "Load double from local variable 2"
    },
    {
      "opcodeHex": "0x29",
      "opcodeDec": 41,
      "mnemonic": "dload_3",
      "description": "Load double from local variable 3"
    },
    {
      "opcodeHex": "0x2a",
      "opcodeDec": 42,
      "mnemonic": "aload_0",
      "description": "Load reference from local variable 0"
    },
    {
      "opcodeHex": "0x2b",
      "opcodeDec": 43,
      "mnemonic": "aload_1",
      "description": "Load reference from local variable 1"
    },
    {
      "opcodeHex": "0x2c",
      "opcodeDec": 44,
      "mnemonic": "aload_2",
      "description": "Load reference from local variable 2"
    },
    {
      "opcodeHex": "0x2d",
      "opcodeDec": 45,
      "mnemonic": "aload_3",
      "description": "Load reference from local variable 3"
    },
    {
      "opcodeHex": "0x2e",
      "opcodeDec": 46,
      "mnemonic": "iaload",
      "description": "Load int from array"
    },
    {
      "opcodeHex": "0x2f",
      "opcodeDec": 47,
      "mnemonic": "laload",
      "description": "Load long from array"
    },
    {
      "opcodeHex": "0x30",
      "opcodeDec": 48,
      "mnemonic": "faload",
      "description": "Load float from array"
    },
    {
      "opcodeHex": "0x31",
      "opcodeDec": 49,
      "mnemonic": "daload",
      "description": "Load double from array"
    },
    {
      "opcodeHex": "0x32",
      "opcodeDec": 50,
      "mnemonic": "aaload",
      "description": "Load reference from array"
    },
    {
      "opcodeHex": "0x33",
      "opcodeDec": 51,
      "mnemonic": "baload",
      "description": "Load byte or boolean from array"
    },
    {
      "opcodeHex": "0x34",
      "opcodeDec": 52,
      "mnemonic": "caload",
      "description": "Load char from array"
    },
    {
      "opcodeHex": "0x35",
      "opcodeDec": 53,
      "mnemonic": "saload",
      "description": "Load short from array"
    },
    {
      "opcodeHex": "0x36",
      "opcodeDec": 54,
      "mnemonic": "istore",
      "description": "Store int into local variable"
    },
    {
      "opcodeHex": "0x37",
      "opcodeDec": 55,
      "mnemonic": "lstore",
      "description": "Store long into local variable"
    },
    {
      "opcodeHex": "0x38",
      "opcodeDec": 56,
      "mnemonic": "fstore",
      "description": "Store float into local variable"
    },
    {
      "opcodeHex": "0x39",
      "opcodeDec": 57,
      "mnemonic": "dstore",
      "description": "Store double into local variable"
    },
    {
      "opcodeHex": "0x3a",
      "opcodeDec": 58,
      "mnemonic": "astore",
      "description": "Store reference into local variable"
    },
    {
      "opcodeHex": "0x3b",
      "opcodeDec": 59,
      "mnemonic": "istore_0",
      "description": "Store int into local variable 0"
    },
    {
      "opcodeHex": "0x3c",
      "opcodeDec": 60,
      "mnemonic": "istore_1",
      "description": "Store int into local variable 1"
    },
    {
      "opcodeHex": "0x3d",
      "opcodeDec": 61,
      "mnemonic": "istore_2",
      "description": "Store int into local variable 2"
    },
    {
      "opcodeHex": "0x3e",
      "opcodeDec": 62,
      "mnemonic": "istore_3",
      "description": "Store int into local variable 3"
    },
    {
      "opcodeHex": "0x3f",
      "opcodeDec": 63,
      "mnemonic": "lstore_0",
      "description": "Store long into local variable 0"
    },
    {
      "opcodeHex": "0x40",
      "opcodeDec": 64,
      "mnemonic": "lstore_1",
      "description": "Store long into local variable 1"
    },
    {
      "opcodeHex": "0x41",
      "opcodeDec": 65,
      "mnemonic": "lstore_2",
      "description": "Store long into local variable 2"
    },
    {
      "opcodeHex": "0x42",
      "opcodeDec": 66,
      "mnemonic": "lstore_3",
      "description": "Store long into local variable 3"
    },
    {
      "opcodeHex": "0x43",
      "opcodeDec": 67,
      "mnemonic": "fstore_0",
      "description": "Store float into local variable 0"
    },
    {
      "opcodeHex": "0x44",
      "opcodeDec": 68,
      "mnemonic": "fstore_1",
      "description": "Store float into local variable 1"
    },
    {
      "opcodeHex": "0x45",
      "opcodeDec": 69,
      "mnemonic": "fstore_2",
      "description": "Store float into local variable 2"
    },
    {
      "opcodeHex": "0x46",
      "opcodeDec": 70,
      "mnemonic": "fstore_3",
      "description": "Store float into local variable 3"
    },
    {
      "opcodeHex": "0x47",
      "opcodeDec": 71,
      "mnemonic": "dstore_0",
      "description": "Store double into local variable 0"
    },
    {
      "opcodeHex": "0x48",
      "opcodeDec": 72,
      "mnemonic": "dstore_1",
      "description": "Store double into local variable 1"
    },
    {
      "opcodeHex": "0x49",
      "opcodeDec": 73,
      "mnemonic": "dstore_2",
      "description": "Store double into local variable 2"
    },
    {
      "opcodeHex": "0x4a",
      "opcodeDec": 74,
      "mnemonic": "dstore_3",
      "description": "Store double into local variable 3"
    },
    {
      "opcodeHex": "0x4b",
      "opcodeDec": 75,
      "mnemonic": "astore_0",
      "description": "Store reference into local variable 0"
    },
    {
      "opcodeHex": "0x4c",
      "opcodeDec": 76,
      "mnemonic": "astore_1",
      "description": "Store reference into local variable 1"
    },
    {
      "opcodeHex": "0x4d",
      "opcodeDec": 77,
      "mnemonic": "astore_2",
      "description": "Store reference into local variable 2"
    },
    {
      "opcodeHex": "0x4e",
      "opcodeDec": 78,
      "mnemonic": "astore_3",
      "description": "Store reference into local variable 3"
    },
    {
      "opcodeHex": "0x4f",
      "opcodeDec": 79,
      "mnemonic": "iastore",
      "description": "Store into int array"
    },
    {
      "opcodeHex": "0x50",
      "opcodeDec": 80,
      "mnemonic": "lastore",
      "description": "Store into long array"
    },
    {
      "opcodeHex": "0x51",
      "opcodeDec": 81,
      "mnemonic": "fastore",
      "description": "Store into float array"
    },
    {
      "opcodeHex": "0x52",
      "opcodeDec": 82,
      "mnemonic": "dastore",
      "description": "Store into double array"
    },
    {
      "opcodeHex": "0x53",
      "opcodeDec": 83,
      "mnemonic": "aastore",
      "description": "Store into reference array"
    },
    {
      "opcodeHex": "0x54",
      "opcodeDec": 84,
      "mnemonic": "bastore",
      "description": "Store into byte or boolean array"
    },
    {
      "opcodeHex": "0x55",
      "opcodeDec": 85,
      "mnemonic": "castore",
      "description": "Store into char array"
    },
    {
      "opcodeHex": "0x56",
      "opcodeDec": 86,
      "mnemonic": "sastore",
      "description": "Store into short array"
    },
    {
      "opcodeHex": "0x57",
      "opcodeDec": 87,
      "mnemonic": "pop",
      "description": "Pop the top operand stack value"
    },
    {
      "opcodeHex": "0x58",
      "opcodeDec": 88,
      "mnemonic": "pop2",
      "description": "Pop the top one or two operand stack values"
    },
    {
      "opcodeHex": "0x59",
      "opcodeDec": 89,
      "mnemonic": "dup",
      "description": "Duplicate the top operand stack value"
    },
    {
      "opcodeHex": "0x5a",
      "opcodeDec": 90,
      "mnemonic": "dup_x1",
      "description": "Duplicate the top operand stack value and insert two values down"
    },
    {
      "opcodeHex": "0x5b",
      "opcodeDec": 91,
      "mnemonic": "dup_x2",
      "description": "Duplicate the top operand stack value and insert three values down"
    },
    {
      "opcodeHex": "0x5c",
      "opcodeDec": 92,
      "mnemonic": "dup2",
      "description": "Duplicate the top one or two operand stack values"
    },
    {
      "opcodeHex": "0x5d",
      "opcodeDec": 93,
      "mnemonic": "dup2_x1",
      "description": "Duplicate two operand stack values and insert three values down"
    },
    {
        "opcodeHex": "0x5e",
        "opcodeDec": 94,
        "mnemonic": "dup2_x2",
        "description": "Duplicate two operand stack values and insert four values down"
    },
    {
        "opcodeHex": "0x5f",
        "opcodeDec": 95,
        "mnemonic": "swap",
        "description": "Swap the top two operand stack values"
    },
    {
        "opcodeHex": "0x60",
        "opcodeDec": 96,
        "mnemonic": "iadd",
        "description": "Add two ints"
    },
    {
        "opcodeHex": "0x61",
        "opcodeDec": 97,
        "mnemonic": "ladd",
        "description": "Add two longs"
    },
    {
        "opcodeHex": "0x62",
        "opcodeDec": 98,
        "mnemonic": "fadd",
        "description": "Add two floats"
    },
    {
        "opcodeHex": "0x63",
        "opcodeDec": 99,
        "mnemonic": "dadd",
        "description": "Add two doubles"
    },
    {
        "opcodeHex": "0x64",
        "opcodeDec": 100,
        "mnemonic": "isub",
        "description": "Subtract two ints"
    },
    {
        "opcodeHex": "0x65",
        "opcodeDec": 101,
        "mnemonic": "lsub",
        "description": "Subtract two longs"
    },
    {
        "opcodeHex": "0x66",
        "opcodeDec": 102,
        "mnemonic": "fsub",
        "description": "Subtract two floats"
    },
    {
        "opcodeHex": "0x67",
        "opcodeDec": 103,
        "mnemonic": "dsub",
        "description": "Subtract two doubles"
    },
    {
        "opcodeHex": "0x68",
        "opcodeDec": 104,
        "mnemonic": "imul",
        "description": "Multiply two ints"
    },
    {
        "opcodeHex": "0x69",
        "opcodeDec": 105,
        "mnemonic": "lmul",
        "description": "Multiply two longs"
    },
    {
        "opcodeHex": "0x6a",
        "opcodeDec": 106,
        "mnemonic": "fmul",
        "description": "Multiply two floats"
    },
    {
        "opcodeHex": "0x6b",
        "opcodeDec": 107,
        "mnemonic": "dmul",
        "description": "Multiply two doubles"
    },
    {
        "opcodeHex": "0x6c",
        "opcodeDec": 108,
        "mnemonic": "idiv",
        "description": "Divide two ints"
    },
    {
        "opcodeHex": "0x6d",
        "opcodeDec": 109,
        "mnemonic": "ldiv",
        "description": "Divide two longs"
    },
    {
        "opcodeHex": "0x6e",
        "opcodeDec": 110,
        "mnemonic": "fdiv",
        "description": "Divide two floats"
    },
    {
        "opcodeHex": "0x6f",
        "opcodeDec": 111,
        "mnemonic": "ddiv",
        "description": "Divide two doubles"
    },
    {
        "opcodeHex": "0x70",
        "opcodeDec": 112,
        "mnemonic": "irem",
        "description": "Remainder of two ints"
    },
    {
        "opcodeHex": "0x71",
        "opcodeDec": 113,
        "mnemonic": "lrem",
        "description": "Remainder of two longs"
    },
    {
        "opcodeHex": "0x72",
        "opcodeDec": 114,
        "mnemonic": "frem",
        "description": "Remainder of two floats"
    },
    {
        "opcodeHex": "0x73",
        "opcodeDec": 115,
        "mnemonic": "drem",
        "description": "Remainder of two doubles"
    },
    {
        "opcodeHex": "0x74",
        "opcodeDec": 116,
        "mnemonic": "ineg",
        "description": "Negate int"
    },
    {
        "opcodeHex": "0x75",
        "opcodeDec": 117,
        "mnemonic": "lneg",
        "description": "Negate long"
    },
    {
        "opcodeHex": "0x76",
        "opcodeDec": 118,
        "mnemonic": "fneg",
        "description": "Negate float"
    },
    {
        "opcodeHex": "0x77",
        "opcodeDec": 119,
        "mnemonic": "dneg",
        "description": "Negate double"
    },
    {
        "opcodeHex": "0x78",
        "opcodeDec": 120,
        "mnemonic": "ishl",
        "description": "Shift left int"
    },
    {
        "opcodeHex": "0x79",
        "opcodeDec": 121,
        "mnemonic": "lshl",
        "description": "Shift left long"
    },
    {
        "opcodeHex": "0x7a",
        "opcodeDec": 122,
        "mnemonic": "ishr",
        "description": "Shift right int"
    },
    {
        "opcodeHex": "0x7b",
        "opcodeDec": 123,
        "mnemonic": "lshr",
        "description": "Shift right long"
    },
    {
        "opcodeHex": "0x7c",
        "opcodeDec": 124,
        "mnemonic": "iushr",
        "description": "Logical shift right int"
    },
    {
        "opcodeHex": "0x7d",
        "opcodeDec": 125,
        "mnemonic": "lushr",
        "description": "Logical shift right long"
    },
    {
        "opcodeHex": "0x7e",
        "opcodeDec": 126,
        "mnemonic": "iand",
        "description": "Boolean AND int"
    },
    {
        "opcodeHex": "0x7f",
        "opcodeDec": 127,
        "mnemonic": "land",
        "description": "Boolean AND long"
    },
    {
        "opcodeHex": "0x80",
        "opcodeDec": 128,
        "mnemonic": "ior",
        "description": "Boolean OR int"
    },
    {
        "opcodeHex": "0x81",
        "opcodeDec": 129,
        "mnemonic": "lor",
        "description": "Boolean OR long"
    },
    {
        "opcodeHex": "0x82",
        "opcodeDec": 130,
        "mnemonic": "ixor",
        "description": "Boolean XOR int"
    },
    {
        "opcodeHex": "0x83",
        "opcodeDec": 131,
        "mnemonic": "lxor",
        "description": "Boolean XOR long"
    },
    {
        "opcodeHex": "0x84",
        "opcodeDec": 132,
        "mnemonic": "iinc",
        "description": "Increment local variable by constant"
    },
    {
        "opcodeHex": "0x85",
        "opcodeDec": 133,
        "mnemonic": "i2l",
        "description": "Convert int to long"
    },
    {
        "opcodeHex": "0x86",
        "opcodeDec": 134,
        "mnemonic": "i2f",
        "description": "Convert int to float"
    },
    {
        "opcodeHex": "0x87",
        "opcodeDec": 135,
        "mnemonic": "i2d",
        "description": "Convert int to double"
    },
    {
        "opcodeHex": "0x88",
        "opcodeDec": 136,
        "mnemonic": "l2i",
        "description": "Convert long to int"
    },
    {
        "opcodeHex": "0x89",
        "opcodeDec": 137,
        "mnemonic": "l2f",
        "description": "Convert long to float"
    },
    {
        "opcodeHex": "0x8a",
        "opcodeDec": 138,
        "mnemonic": "l2d",
        "description": "Convert long to double"
    },
    {
        "opcodeHex": "0x8b",
        "opcodeDec": 139,
        "mnemonic": "f2i",
        "description": "Convert float to int"
    },
    {
        "opcodeHex": "0x8c",
        "opcodeDec": 140,
        "mnemonic": "f2l",
        "description": "Convert float to long"
    },
    {
        "opcodeHex": "0x8d",
        "opcodeDec": 141,
        "mnemonic": "f2d",
        "description": "Convert float to double"
    },
    {
        "opcodeHex": "0x8e",
        "opcodeDec": 142,
        "mnemonic": "d2i",
        "description": "Convert double to int"
    },
    {
        "opcodeHex": "0x8f",
        "opcodeDec": 143,
        "mnemonic": "d2l",
        "description": "Convert double to long"
    },
    {
        "opcodeHex": "0x90",
        "opcodeDec": 144,
        "mnemonic": "d2f",
        "description": "Convert double to float"
    },
    {
        "opcodeHex": "0x91",
        "opcodeDec": 145,
        "mnemonic": "i2b",
        "description": "Convert int to byte"
    },
    {
        "opcodeHex": "0x92",
        "opcodeDec": 146,
        "mnemonic": "i2c",
        "description": "Convert int to char"
    },
    {
        "opcodeHex": "0x93",
        "opcodeDec": 147,
        "mnemonic": "i2s",
        "description": "Convert int to short"
    },
    {
        "opcodeHex": "0x94",
        "opcodeDec": 148,
        "mnemonic": "lcmp",
        "description": "Compare long"
    },
    {
        "opcodeHex": "0x95",
        "opcodeDec": 149,
        "mnemonic": "fcmpl",
        "description": "Compare float (less)"
    },
    {
        "opcodeHex": "0x96",
        "opcodeDec": 150,
        "mnemonic": "fcmpg",
        "description": "Compare float (greater)"
    },
    {
        "opcodeHex": "0x97",
        "opcodeDec": 151,
        "mnemonic": "dcmpl",
        "description": "Compare double (less)"
    },
    {
        "opcodeHex": "0x98",
        "opcodeDec": 152,
        "mnemonic": "dcmpg",
        "description": "Compare double (greater)"
    },
    {
      "opcodeHex": "0x99",
      "opcodeDec": 153,
      "mnemonic": "ifeq",
      "description": "Branch if int comparison with zero succeeds (== 0)"
    },
    {
      "opcodeHex": "0x9a",
      "opcodeDec": 154,
      "mnemonic": "ifne",
      "description": "Branch if int comparison with zero does not succeed (!= 0)"
    },
    {
      "opcodeHex": "0x9b",
      "opcodeDec": 155,
      "mnemonic": "iflt",
      "description": "Branch if int comparison with zero is less than (< 0)"
    },
    {
      "opcodeHex": "0x9c",
      "opcodeDec": 156,
      "mnemonic": "ifge",
      "description": "Branch if int comparison with zero is greater than or equal to (>= 0)"
    },
    {
      "opcodeHex": "0x9d",
      "opcodeDec": 157,
      "mnemonic": "ifgt",
      "description": "Branch if int comparison with zero is greater than (> 0)"
    },
    {
      "opcodeHex": "0x9e",
      "opcodeDec": 158,
      "mnemonic": "ifle",
      "description": "Branch if int comparison with zero is less than or equal to (<= 0)"
    },
    {
      "opcodeHex": "0x9f",
      "opcodeDec": 159,
      "mnemonic": "if_icmpeq",
      "description": "Branch if int comparison equals (==)"
    },
    {
      "opcodeHex": "0xa0",
      "opcodeDec": 160,
      "mnemonic": "if_icmpne",
      "description": "Branch if int comparison does not equal (!=)"
    },
    {
      "opcodeHex": "0xa1",
      "opcodeDec": 161,
      "mnemonic": "if_icmplt",
      "description": "Branch if int comparison is less than (<)"
    },
    {
      "opcodeHex": "0xa2",
      "opcodeDec": 162,
      "mnemonic": "if_icmpge",
      "description": "Branch if int comparison is greater than or equal to (>=)"
    },
    {
      "opcodeHex": "0xa3",
      "opcodeDec": 163,
      "mnemonic": "if_icmpgt",
      "description": "Branch if int comparison is greater than (>)"
    },
    {
      "opcodeHex": "0xa4",
      "opcodeDec": 164,
      "mnemonic": "if_icmple",
      "description": "Branch if int comparison is less than or equal to (<=)"
    },
    {
      "opcodeHex": "0xa5",
      "opcodeDec": 165,
      "mnemonic": "if_acmpeq",
      "description": "Branch if reference comparison is equal"
    },
    {
      "opcodeHex": "0xa6",
      "opcodeDec": 166,
      "mnemonic": "if_acmpne",
      "description": "Branch if reference comparison is not equal"
    },
    {
      "opcodeHex": "0xa7",
      "opcodeDec": 167,
      "mnemonic": "goto",
      "description": "Branch always"
    },
    {
      "opcodeHex": "0xa8",
      "opcodeDec": 168,
      "mnemonic": "jsr",
      "description": "Jump to subroutine"
    },
    {
      "opcodeHex": "0xa9",
      "opcodeDec": 169,
      "mnemonic": "ret",
      "description": "Return from subroutine"
    },
    {
      "opcodeHex": "0xaa",
      "opcodeDec": 170,
      "mnemonic": "tableswitch",
      "description": "Access jump table by index and jump"
    },
    {
      "opcodeHex": "0xab",
      "opcodeDec": 171,
      "mnemonic": "lookupswitch",
      "description": "Access jump table by key match and jump"
    },
    {
      "opcodeHex": "0xac",
      "opcodeDec": 172,
      "mnemonic": "ireturn",
      "description": "Return int from method"
    },
    {
      "opcodeHex": "0xad",
      "opcodeDec": 173,
      "mnemonic": "lreturn",
      "description": "Return long from method"
    },
    {
      "opcodeHex": "0xae",
      "opcodeDec": 174,
      "mnemonic": "freturn",
      "description": "Return float from method"
    },
    {
      "opcodeHex": "0xaf",
      "opcodeDec": 175,
      "mnemonic": "dreturn",
      "description": "Return double from method"
    },
    {
      "opcodeHex": "0xb0",
      "opcodeDec": 176,
      "mnemonic": "areturn",
      "description": "Return reference from method"
    },
    {
      "opcodeHex": "0xb1",
      "opcodeDec": 177,
      "mnemonic": "return",
      "description": "Return void from method"
    },
    {
      "opcodeHex": "0xb2",
      "opcodeDec": 178,
      "mnemonic": "getstatic",
      "description": "Get static field from class"
    },
    {
      "opcodeHex": "0xb3",
      "opcodeDec": 179,
      "mnemonic": "putstatic",
      "description": "Set static field in class"
    },
    {
      "opcodeHex": "0xb4",
      "opcodeDec": 180,
      "mnemonic": "getfield",
      "description": "Fetch field from object"
    },
    {
      "opcodeHex": "0xb5",
      "opcodeDec": 181,
      "mnemonic": "putfield",
      "description": "Set field in object"
    },
    {
      "opcodeHex": "0xb6",
      "opcodeDec": 182,
      "mnemonic": "invokevirtual",
      "description": "Invoke instance method; dispatch based on class"
    },
    {
      "opcodeHex": "0xb7",
      "opcodeDec": 183,
      "mnemonic": "invokespecial",
      "description": "Invoke instance method; special handling for superclass, private, and instance initialization methods"
    },
    {
      "opcodeHex": "0xb8",
      "opcodeDec": 184,
      "mnemonic": "invokestatic",
      "description": "Invoke a static method"
    },
    {
      "opcodeHex": "0xb9",
      "opcodeDec": 185,
      "mnemonic": "invokeinterface",
      "description": "Invoke interface method"
    },
    {
      "opcodeHex": "0xba",
      "opcodeDec": 186,
      "mnemonic": "invokedynamic",
      "description": "Invoke a dynamically-computed method"
    },
    {
      "opcodeHex": "0xbb",
      "opcodeDec": 187,
      "mnemonic": "new",
      "description": "Create new object"
    },
    {
      "opcodeHex": "0xbc",
      "opcodeDec": 188,
      "mnemonic": "newarray",
      "description": "Create new array"
    },
    {
      "opcodeHex": "0xbd",
      "opcodeDec": 189,
      "mnemonic": "anewarray",
      "description": "Create new reference array"
    },
    {
      "opcodeHex": "0xbe",
      "opcodeDec": 190,
      "mnemonic": "arraylength",
      "description": "Get length of array"
    },
    {
      "opcodeHex": "0xbf",
      "opcodeDec": 191,
      "mnemonic": "athrow",
      "description": "Throw exception or error"
    },
    {
      "opcodeHex": "0xc0",
      "opcodeDec": 192,
      "mnemonic": "checkcast",
      "description": "Check whether object is of given type"
    },
    {
      "opcodeHex": "0xc1",
      "opcodeDec": 193,
      "mnemonic": "instanceof",
      "description": "Determine if object is of given type"
    },
    {
      "opcodeHex": "0xc2",
      "opcodeDec": 194,
      "mnemonic": "monitorenter",
      "description": "Enter monitor for object"
    },
    {
      "opcodeHex": "0xc3",
      "opcodeDec": 195,
      "mnemonic": "monitorexit",
      "description": "Exit monitor for object"
    },
    {
      "opcodeHex": "0xc4",
      "opcodeDec": 196,
      "mnemonic": "wide",
      "description": "Extend local variable index by additional bytes"
    },
    {
      "opcodeHex": "0xc5",
      "opcodeDec": 197,
      "mnemonic": "multianewarray",
      "description": "Create new multidimensional array"
    },
    {
      "opcodeHex": "0xc6",
      "opcodeDec": 198,
      "mnemonic": "ifnull",
      "description": "Branch if reference is null"
    },
    {
      "opcodeHex": "0xc7",
      "opcodeDec": 199,
      "mnemonic": "ifnonnull",
      "description": "Branch if reference is not null"
    },
    {
      "opcodeHex": "0xc8",
      "opcodeDec": 200,
      "mnemonic": "goto_w",
      "description": "Branch always (wide index)"
    },
    {
      "opcodeHex": "0xc9",
      "opcodeDec": 201,
      "mnemonic": "jsr_w",
      "description": "Jump to subroutine (wide index)"
    }
  ]
  
  